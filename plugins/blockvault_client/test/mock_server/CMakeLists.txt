project(blockvault_svr_tst_mock_server)
cmake_minimum_required( VERSION 3.8 )
message(STATUS "find OPENSSL_INCLUDE_DIR=${OPENSSL_INCLUDE_DIR}, OPENSSL_LIBRARIES=${OPENSSL_LIBRARIES},OPENSSL_CRYPTO_LIBRARY=${OPENSSL_CRYPTO_LIBRARY},OPENSSL_SSL_LIBRARY=${OPENSSL_SSL_LIBRARY},OPENSSL_ROOT_DIR=${OPENSSL_ROOT_DIR}")
find_package(Boost 1.70 )
message(STATUS "find BOOST_ROOT=${BOOST_ROOT},Boost_DIR=${Boost_DIR},")
include_directories(${OPENSSL_INCLUDE_DIR})
include_directories(${Boost_DIR}/../../../include)
link_directories(${OPENSSL_ROOT_DIR}/lib)
add_executable(t0001_hss.run t0001_hss.cpp)
add_executable(t0002_hsss.run t0002_hsss.cpp)
add_executable(t0003_wss.run t0003_wss.cpp)
add_executable(t0004_wsss.run t0004_wsss.cpp)
add_executable(t0005_wsas.run t0005_wsas.cpp)
add_executable(t0006_hsf.run t0006_hsf.cpp)
add_executable(t0007_wssts.run t0007_wssts.cpp)
add_executable(t0008_as.run t0008_as.cpp)
add_executable(t0009_asf.run t0009_asf.cpp)
add_executable(t0011_wsa.run t0011_wsa.cpp)
add_executable(t0012_hsas.run t0012_hsas.cpp)
add_executable(t0013_wsst.run t0013_wsst.cpp)
add_executable(mock_server.run mock_server.cpp)
target_link_libraries( t0001_hss.run  pthread )
target_link_libraries( t0002_hsss.run ${OPENSSL_SSL_LIBRARY} ${OPENSSL_CRYPTO_LIBRARY} pthread )
target_link_libraries( t0003_wss.run  pthread )
target_link_libraries( t0004_wsss.run ${OPENSSL_SSL_LIBRARY} ${OPENSSL_CRYPTO_LIBRARY} pthread )
target_link_libraries( t0005_wsas.run ${OPENSSL_SSL_LIBRARY} ${OPENSSL_CRYPTO_LIBRARY} pthread )
target_link_libraries( t0006_hsf.run   pthread )
target_link_libraries( t0007_wssts.run ${OPENSSL_SSL_LIBRARY} ${OPENSSL_CRYPTO_LIBRARY} pthread )
target_link_libraries( t0008_as.run ${OPENSSL_SSL_LIBRARY} ${OPENSSL_CRYPTO_LIBRARY} pthread )
target_link_libraries( t0009_asf.run ${OPENSSL_SSL_LIBRARY} ${OPENSSL_CRYPTO_LIBRARY} pthread )
target_link_libraries( t0011_wsa.run pthread )
target_link_libraries( t0012_hsas.run ${OPENSSL_SSL_LIBRARY} ${OPENSSL_CRYPTO_LIBRARY} pthread )
target_link_libraries( t0013_wsst.run pthread )
target_link_libraries(mock_server.run  ${OPENSSL_SSL_LIBRARY} ${OPENSSL_CRYPTO_LIBRARY}  pthread )


